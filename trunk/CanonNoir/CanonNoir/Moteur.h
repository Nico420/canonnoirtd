//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#ifndef MOTEUR_H
#define MOTEUR_H
#pragma once

#include <vector>
#include "Joueur.h"
#include "Plateau.h"
#include "Etat.h"
#include "De.h"

class Moteur
{
	private :
		int nbJoueurs;
		std::vector<int> ordreJoueurs;
		int joueurCourant;
		std::pair<int,int> click;
		std::pair<De,De> des;
		std::vector<Joueur> joueurs;
		Plateau plateau;
		Etat* etat;

	public :
		Moteur();
		~Moteur();
		void setNbJoueurs(int nb);
		void setEtat(int e);
		void deplacerBateau(Bateau& b,int destx,int desty);
		void execute();
		int getNbJoueurs() const;
		std::pair<int,int> getClick()const;
		void setClick(int x,int y);
		int getJoueurCourant() const;
		void setJoueurCourant(int jc);
		Etat* getEtat() const;
		enum Etats { ATTENTENBJOUEURS=1,CHOISIRPORT=2,SETORDREJOUEURS=3,LANCERDESDEPLACEMENT=4,NAVIGATION=5,
			TIRCANONDUEL=6,TIRCANONUNIQUE=7,PARTIEGAGNEE=8 };
};

inline int Moteur::getNbJoueurs() const{
	return nbJoueurs;
}

inline std::pair<int,int> Moteur::getClick() const{
	return this->click;
}

inline int Moteur::getJoueurCourant() const{
	return joueurCourant;
}

inline void Moteur::setJoueurCourant(int jc){
	this->joueurCourant = jc;
}

inline Etat* Moteur::getEtat() const{
	return this->etat;
}

#endif