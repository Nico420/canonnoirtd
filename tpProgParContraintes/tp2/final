contraintes(R) :- 	(foreach(m(P,C,B,V,A,I),R)
						do
	(P &= anglais) #= (C &= rouge),
	(P &= espagnol) #= (A &= chien),
	(B &= cafe) #= (C &= verte),
	(P &= ukrainien) #= (B &= the),
	(A &= serpents) #= (V &= bmw),
	(C &= jaune) #= (V &= toyota),
	(B &= lait) #= (I #= 3),
	(P &= norvegien) #= (I #= 1),
	(B &= jusdOrange) #= (V &= honda),
	(P &= japonais) #= (V &= datsun)
					).
					
contraintes2(R) :-	(foreach(m(P1,C1,_B1,V1,_A1,I1),R),param(R)
						do
		(foreach(m(_P2,C2,_B2,_V2,A2,I2),R),param(I1,C1,V1,P1)
								do
	((C1 &= verte) and (C2 &= blanche)) => (I1 #=I2+1),
	((V1 &= ford) and (A2 &= renard)) => ((I2 #=I1+1) or (I2 #=I1-1)),
	((V1 &= toyota) and (A2 &= cheval)) => ((I2 #=I1+1) or (I2 #=I1-1)),
	((P1 &= norvegien) and (C2 &= bleue)) => ((I2 #=I1+1) or (I2 #=I1-1))
							)
					).
	
resoudre2(R) :- rue(R),getVarList(R,L),contraintes(R),contraintes2(R),labeling_symbolic(L),ecrit_maisons(R).				
/*Test

[eclipse 34]: resoudre2(R).
m(norvegien, jaune, eau, toyota, renard, 1)
m(ukrainien, bleue, the, ford, cheval, 2)
m(anglais, rouge, lait, bmw, serpents, 3)
m(espagnol, blanche, jusdOrange, honda, chien, 4)
m(japonais, verte, cafe, datsun, zebre, 5)

R = [m(norvegien, jaune, eau, toyota, renard, 1), m(ukrainien, bleue, the, ford, cheval, 2), m(anglais, rouge, lait, bmw, serpents, 3), m(espagnol, blanche, jusdOrange, honda, chien, 4), m(japonais, verte, cafe, datsun, zebre, 5)]
Yes (0.01s cpu, solution 1, maybe more) ? ;

No (0.01s cpu)

*/
